name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号 (例如: v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
            arch: x64
          - os: windows-latest
            platform: win
            arch: ia32
          - os: macos-latest
            platform: mac
            arch: x64
          - os: macos-latest
            platform: mac
            arch: arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Create placeholder icons
      run: |
        mkdir -p build
        # 创建简单的占位符图标（使用ImageMagick或其他工具）
        # 这里我们先创建空文件，实际使用时需要真正的图标
        touch build/icon.ico
        touch build/icon.png
      shell: bash

    - name: Install dependencies
      run: npm install

    - name: Build application for Windows
      if: matrix.platform == 'win'
      run: npm run build-win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build application for macOS
      if: matrix.platform == 'mac'
      run: npm run build-mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # 对于macOS代码签名（可选）
        # CSC_LINK: ${{ secrets.MAC_CERTS }}
        # CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-${{ matrix.arch }}-build
        path: |
          dist/*.exe
          dist/*.dmg
          dist/*.AppImage
          dist/*.zip
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure of downloaded files
      run: ls -la ./artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        release_name: 婴幼儿健康追踪系统 ${{ github.event.inputs.version || github.ref_name }}
        body: |
          ## 🍼 婴幼儿健康追踪系统 桌面版
          
          ### ✨ 新特性
          - 基于WHO 2006标准的精确计算
          - 智能OCR体检报告识别
          - AI个性化喂养建议
          - 生长曲线可视化分析
          - 完全离线使用，数据本地存储
          
          ### 📦 下载说明
          
          **Windows用户：**
          - `*.exe` - Windows安装程序（推荐）
          - 支持Windows 7及以上版本
          
          **Mac用户：**
          - `*.dmg` - macOS安装包
          - 支持macOS 10.13及以上版本
          - 包含Intel和Apple Silicon版本
          
          ### 🔧 安装指南
          1. 下载对应系统的安装包
          2. 双击运行安装程序
          3. 按提示完成安装
          4. 启动应用即可使用
          
          ### 💡 使用提示
          - 首次使用请填写宝宝基本信息
          - 支持拖拽上传体检报告图片
          - 所有数据仅保存在本地，确保隐私安全
          - 可导出数据备份，支持数据迁移
          
          ---
          
          如有问题，请在GitHub Issues中反馈。
          
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        for file in ./artifacts/**/*; do
          if [ -f "$file" ]; then
            echo "Uploading $file"
            gh release upload ${{ github.event.inputs.version || github.ref_name }} "$file" --clobber
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
